{"version":3,"sources":["views/app-views/pages/user-list/UserEditingView.js","views/app-views/pages/user-list/index.js"],"names":["UserEditingView","avatarEndpoint","state","avatarUrl","name","props","data","email","address","city","phone","website","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","this","Flex","alignItems","mobileFlex","className","size","src","icon","UserOutlined","onChange","info","key","file","status","getBase64","originFileObj","imageUrl","setState","message","success","content","duration","loading","showUploadList","action","type","onClick","close","layout","initialValues","onFinish","values","setTimeout","phoneNumber","onFinishFailed","errorInfo","console","log","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","required","htmlType","Component","UserList","users","userProfileVisible","selectedUser","editingUserId","deleteUser","userId","filter","item","id","showUserProfile","userInfo","closeUserProfile","handleNameClick","fetch","then","response","json","catch","error","Loading","visible","tableColumns","title","dataIndex","sorter","compare","a","b","toLowerCase","render","record","_","elm","EyeOutlined","danger","DeleteOutlined","bodyStyle","columns","dataSource","rowKey"],"mappings":"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","file":"static/js/17.dc79898d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Avatar, Button, Input, Row, Col, message, Upload } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { ROW_GUTTER } from 'constants/ThemeConstant';\r\nimport Flex from 'components/shared-components/Flex'\r\n\r\nexport class UserEditingView extends Component {\r\n\r\n    avatarEndpoint = 'https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n\r\n    state = {\r\n        avatarUrl: '/img/avatars/thumb-6.jpg',\r\n        name: this.props.data.name || '',\r\n        email: this.props.data.email || '',\r\n        address: this.props.data.address.city || '',\r\n        phone: this.props.data.phone || '',\r\n        website: this.props.data.website || '',\r\n    }\r\n\r\n\r\n\r\n    getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    render() {\r\n        const { name, email, address, phone, website } = this.state;\r\n\r\n        const onFinish = values => {\r\n            const key = 'updatable';\r\n            message.loading({ content: 'Updating...', key });\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    name: values.name,\r\n                    email: values.email,\r\n                    address: values.address,\r\n                    phoneNumber: values.phoneNumber,\r\n                    website: values.website,\r\n                })\r\n                message.success({ content: 'Done!', key, duration: 2 });\r\n            }, 1000);\r\n        };\r\n\r\n        const onFinishFailed = errorInfo => {\r\n            console.log('Failed:', errorInfo);\r\n        };\r\n\r\n        const onUploadAavater = info => {\r\n            const key = 'updatable';\r\n            if (info.file.status === 'uploading') {\r\n                message.loading({ content: 'Uploading...', key, duration: 1000 });\r\n                return;\r\n            }\r\n            if (info.file.status === 'done') {\r\n                this.getBase64(info.file.originFileObj, imageUrl =>\r\n                    this.setState({\r\n                        avatarUrl: imageUrl,\r\n                    }),\r\n                );\r\n                message.success({ content: 'Uploaded!', key, duration: 1.5 });\r\n            }\r\n        };\r\n\r\n        const onRemoveAvater = () => {\r\n            this.setState({\r\n                avatarUrl: ''\r\n            })\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Flex alignItems=\"center\" mobileFlex={false} className=\"text-center text-md-left\">\r\n                    <Avatar size={90} src={this.state.avatarUrl} icon={<UserOutlined />} />\r\n                    <div className=\"ml-md-3 mt-md-0 mt-3\">\r\n                        <Upload onChange={onUploadAavater} showUploadList={false} action={this.avatarEndpoint}>\r\n                            <Button type=\"primary\">Сменить</Button>\r\n                        </Upload>\r\n                        <Button className=\"ml-2\" onClick={onRemoveAvater}>Удалить</Button>\r\n                    </div>\r\n                    <Button onClick={this.props.close}>Закрыть</Button>\r\n                </Flex>\r\n                <div className=\"mt-4\">\r\n                    <Form\r\n                        name=\"basicInformation\"\r\n                        layout=\"vertical\"\r\n                        initialValues={\r\n                            {\r\n                                'name': name,\r\n                                'email': email,\r\n                                'address': address,\r\n                                'phone': phone,\r\n                                'website': website,\r\n                            }\r\n                        }\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                    >\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={24} lg={16}>\r\n                                <Row gutter={ROW_GUTTER}>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Please input your name!',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            rules={[{\r\n                                                required: true,\r\n                                                type: 'email',\r\n                                                message: 'Please enter a valid email!'\r\n                                            }]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Phone Number\"\r\n                                            name=\"phone\"\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Website\"\r\n                                            name=\"website\"\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={24}>\r\n                                        <Form.Item\r\n                                            label=\"Address\"\r\n                                            name=\"address\"\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Button type=\"primary\" htmlType=\"submit\" onClick={() => {\r\n                                    setTimeout(this.props.close, 1500);\r\n                                }}>\r\n                                    Сохранить изменения\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default UserEditingView","import React, { Component } from 'react'\r\nimport { Card, Table, Tooltip, message, Button } from 'antd';\r\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport UserEditingView from './UserEditingView';\r\nimport Loading from 'components/shared-components/Loading';\r\n\r\nexport class UserList extends Component {\r\n    state = {\r\n        users: [],\r\n        userProfileVisible: false,\r\n        selectedUser: null,\r\n        loading: true,\r\n        editingUserId: null,\r\n    }\r\n\r\n    deleteUser = userId => {\r\n        this.setState({\r\n            users: this.state.users.filter(item => item.id !== userId),\r\n        })\r\n        message.success({ content: `Deleted user ${userId}`, duration: 2 });\r\n    }\r\n\r\n    showUserProfile = userInfo => {\r\n        this.setState({\r\n            userProfileVisible: true,\r\n            selectedUser: userInfo\r\n        });\r\n        console.log(userInfo);\r\n    };\r\n\r\n    closeUserProfile = () => {\r\n        this.setState({\r\n            userProfileVisible: false,\r\n            selectedUser: null\r\n        });\r\n    }\r\n\r\n    handleNameClick = (userId) => {\r\n        this.setState({ editingUserId: userId });\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com//users')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.setState({ users: json, loading: false });\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n                this.setState({ loading: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { users, userProfileVisible, selectedUser, loading } = this.state;\r\n\r\n        if (loading) {\r\n            <Loading />\r\n        }\r\n\r\n        if (userProfileVisible) {\r\n            return (\r\n                <UserEditingView data={selectedUser} visible={userProfileVisible} close={() => { this.closeUserProfile() }} />\r\n            );\r\n        } else {\r\n            const tableColumns = [\r\n                {\r\n                    title: 'Name',\r\n                    dataIndex: 'name',\r\n                    sorter: {\r\n                        compare: (a, b) => {\r\n                            a = a.name.toLowerCase();\r\n                            b = b.name.toLowerCase();\r\n                            return a > b ? -1 : b > a ? 1 : 0;\r\n                        },\r\n                        render: (name, record) => (\r\n                            <span onClick={() => this.handleNameClick(record.id)}>{name}</span>\r\n                        ),\r\n                    },\r\n                },\r\n                {\r\n                    title: 'Email',\r\n                    dataIndex: 'email',\r\n                },\r\n                {\r\n                    title: 'Address',\r\n                    dataIndex: 'address',\r\n                    render: address => (\r\n                        <span>{address && address.city ? address.city : '-'}</span>\r\n                    ),\r\n                },\r\n                {\r\n                    title: 'Phone',\r\n                    dataIndex: 'phone',\r\n                },\r\n                {\r\n                    title: 'Website',\r\n                    dataIndex: 'website',\r\n                },\r\n                {\r\n                    title: '',\r\n                    dataIndex: 'actions',\r\n                    render: (_, elm) => (\r\n                        <div className=\"text-right\">\r\n                            <Tooltip title=\"View\">\r\n                                <Button type=\"primary\" className=\"mr-2\" icon={<EyeOutlined />} onClick={() => { this.showUserProfile(elm) }} size=\"small\" />\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Delete\">\r\n                                <Button danger icon={<DeleteOutlined />} onClick={() => { this.deleteUser(elm.id) }} size=\"small\" />\r\n                            </Tooltip>\r\n                        </div>\r\n                    )\r\n                }\r\n            ];\r\n\r\n            return (\r\n                <Card bodyStyle={{ 'padding': '0px' }}>\r\n                    <Table columns={tableColumns} dataSource={users} rowKey='id' />\r\n                </Card>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default UserList\r\n"],"sourceRoot":""}