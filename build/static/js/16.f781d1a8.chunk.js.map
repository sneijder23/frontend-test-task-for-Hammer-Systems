{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/app-views/pages/planner/index.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","RoomEditor","useState","width","height","roomSize","setRoomSize","furniture","setFurniture","draggedItemId","setDraggedItemId","handleRoomSizeChange","e","target","name","value","prevSize","parseInt","htmlFor","type","id","onChange","data-type","onClick","nativeEvent","offsetX","offsetY","newFurniture","Date","now","dataset","position","x","y","prevFurniture","style","border","display","gridTemplateColumns","Math","floor","gridTemplateRows","map","item","gridColumn","gridRow","left","top","background","cursor","draggable","onDragStart","onDragEnd","onDrag","deltaX","clientX","deltaY","clientY","handleFurnitureMove","right","filter"],"mappings":"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","file":"static/js/16.f781d1a8.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react';\r\n\r\nconst RoomEditor = () => {\r\n  const [roomSize, setRoomSize] = useState({ width: 500, height: 300 });\r\n  const [furniture, setFurniture] = useState([]);\r\n  const [draggedItemId, setDraggedItemId] = useState(null);\r\n\r\n  const handleRoomSizeChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setRoomSize((prevSize) => ({\r\n      ...prevSize,\r\n      [name]: parseInt(value),\r\n    }));\r\n  };\r\n\r\n  const handleAddFurniture = (e) => {\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n\r\n    const newFurniture = {\r\n      id: Date.now(),\r\n      type: e.target.dataset.type,\r\n      position: { x: offsetX, y: offsetY },\r\n    };\r\n\r\n    setFurniture((prevFurniture) => [...prevFurniture, newFurniture]);\r\n    setDraggedItemId(newFurniture.id);\r\n  };\r\n\r\n  const handleFurnitureMove = (id, deltaX, deltaY) => {\r\n    if (draggedItemId === id) {\r\n      setFurniture((prevFurniture) =>\r\n        prevFurniture.map((item) =>\r\n          item.id === id ? { ...item, position: { x: item.position.x + deltaX, y: item.position.y + deltaY } } : item\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleFurnitureRemove = (id) => {\r\n    setFurniture((prevFurniture) => prevFurniture.filter((item) => item.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Планировщик</h2>\r\n      <div>\r\n        <label htmlFor=\"width\">Ширина:</label>\r\n        <input type=\"number\" id=\"width\" name=\"width\" value={roomSize.width} onChange={handleRoomSizeChange} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"height\">Высота:</label>\r\n        <input type=\"number\" id=\"height\" name=\"height\" value={roomSize.height} onChange={handleRoomSizeChange} />\r\n      </div>\r\n      <button data-type=\"someType\" onClick={handleAddFurniture}>\r\n        Добавить квадрат\r\n      </button>\r\n      <div\r\n        style={{\r\n          border: '1px solid black',\r\n          width: roomSize.width,\r\n          height: roomSize.height,\r\n          position: 'relative',\r\n          display: 'grid',\r\n          gridTemplateColumns: `repeat(${Math.floor(roomSize.width / 50)}, 50px)`,\r\n          gridTemplateRows: `repeat(${Math.floor(roomSize.height / 50)}, 50px)`,\r\n        }}\r\n      >\r\n        {furniture.map((item) => (\r\n          <div\r\n            key={item.id}\r\n            style={{\r\n              gridColumn: `span 1`,\r\n              gridRow: `span 1`,\r\n              position: 'absolute',\r\n              left: item.position.x,\r\n              top: item.position.y,\r\n              width: 50,\r\n              height: 50,\r\n              background: 'red',\r\n              cursor: 'move',\r\n            }}\r\n            draggable\r\n            onDragStart={(e) => {\r\n              setDraggedItemId(parseInt(e.target.dataset.id));\r\n            }}\r\n            onDragEnd={() => {\r\n              setDraggedItemId(null);\r\n            }}\r\n            onDrag={(e) => {\r\n              const deltaX = e.clientX - e.nativeEvent.offsetX - item.position.x;\r\n              const deltaY = e.clientY - e.nativeEvent.offsetY - item.position.y;\r\n              handleFurnitureMove(item.id, deltaX, deltaY);\r\n            }}\r\n          >\r\n            <button\r\n              style={{ position: 'absolute', top: -10, right: -10 }}\r\n              onClick={() => handleFurnitureRemove(item.id)}\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomEditor;"],"sourceRoot":""}